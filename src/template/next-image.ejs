'use client'
// This file is generated by image-to-react-component automatically
// DO NOT CHANGE IT MANUALLY!
import Image from 'next/image';
import { CSSProperties, ReactNode } from 'react';
import <%= componentName %> from '<%= relativeFilePath %>';

type ExtractProps<T> =
  T extends React.ForwardRefExoticComponent<infer P> ? P : never;
type ImageProps = ExtractProps<typeof Image>;

interface ImageCompProps extends Omit<ImageProps, 'src'> {
  className?: string;
  style?: CSSProperties;
  /** 是否自动设置大小 */
  noSize?: boolean;
  src?: string;
  children?: ReactNode;
}

// 定义默认尺寸常量
const DEFAULT_DIMENSIONS = {
  width: <%= width %>,
  height: <%= height %>,
} as const;

// 抽取共享的尺寸计算逻辑
const getSizeProps = (noSize?: boolean) => 
  noSize ? {} : DEFAULT_DIMENSIONS;

export const <%= componentName %>Image = (props: ImageCompProps) => {
  const { src, noSize, alt, ...restProps } = props;
  return (
    <Image
      {...restProps}
      {...getSizeProps(noSize)}
      src={src || <%= componentName %>.src}
      alt={alt ?? ''}
    />
  );
};

export const <%= componentName %>Background = (props: ImageCompProps) => {
  const { className, noSize, style, children } = props;
  return (
    <div
      className={className}
      style={{
        ...getSizeProps(noSize),
        backgroundImage: `url(${<%= componentName %>.src})`,
        backgroundSize: '100% 100%',
        backgroundRepeat: 'no-repeat',
        ...style,
      }}
    >
      {children}
    </div>
  );
};

// 添加组件显示名称，便于调试
<%= componentName %>Image.displayName = '<%= componentName %>Image';
<%= componentName %>Background.displayName = '<%= componentName %>Background';
